// <auto-generated />
using System;
using GMC.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GMC.Data.Migrations
{
    [DbContext(typeof(DataContext))]
    partial class DataContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GMC.Core.DetailPickList", b =>
                {
                    b.Property<int>("IdPickDetail")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPickDetail"));

                    b.Property<string>("Emplacement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NombreUS")
                        .HasColumnType("int");

                    b.Property<int>("PickListId")
                        .HasColumnType("int");

                    b.Property<int>("ProduitId")
                        .HasColumnType("int");

                    b.Property<int>("QuantiteDemande")
                        .HasColumnType("int");

                    b.Property<int>("Skipped")
                        .HasColumnType("int");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("IdPickDetail");

                    b.HasIndex("PickListId");

                    b.HasIndex("ProduitId");

                    b.HasIndex("StatusId");

                    b.ToTable("DetailPickList");
                });

            modelBuilder.Entity("GMC.Core.InformationUS", b =>
                {
                    b.Property<int>("IdInformationUS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdInformationUS"));

                    b.Property<int>("AvisArrivage")
                        .HasColumnType("int");

                    b.Property<int>("CodeCoutStock")
                        .HasColumnType("int");

                    b.Property<string>("CodePart")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeProduit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("DateCodeSAG")
                        .HasColumnType("int");

                    b.Property<string>("Emplacement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fabricant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Fournisseur")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NumPieceFab")
                        .HasColumnType("int");

                    b.Property<string>("NumUs")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<string>("RefFabricant")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("RefLotFRS")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("SAPMag")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StockSpecial")
                        .HasColumnType("int");

                    b.HasKey("IdInformationUS");

                    b.HasIndex("NumUs")
                        .IsUnique();

                    b.ToTable("InformationUS");
                });

            modelBuilder.Entity("GMC.Core.LigneProduction", b =>
                {
                    b.Property<int>("IdLigneProduction")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdLigneProduction"));

                    b.Property<int>("Boucle")
                        .HasColumnType("int");

                    b.Property<string>("CodeLigneProduction")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime2");

                    b.Property<int>("Etat")
                        .HasColumnType("int");

                    b.Property<int>("Forced")
                        .HasColumnType("int");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("ProduitForced")
                        .HasColumnType("int");

                    b.Property<string>("RobotTraitement")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdLigneProduction");

                    b.ToTable("LigneProduction");
                });

            modelBuilder.Entity("GMC.Core.PickList", b =>
                {
                    b.Property<int>("IdPickList")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdPickList"));

                    b.Property<string>("ApprobSuppPar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CodeProduit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("DateApprobSuppression")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateDemandeSuppression")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateLivraison")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateServi")
                        .HasColumnType("datetime2");

                    b.Property<string>("DemandeAnnulation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("DemandeSuppPar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("IdCauseServi")
                        .HasColumnType("int");

                    b.Property<int>("LigneProductionId")
                        .HasColumnType("int");

                    b.Property<string>("Magasin")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("NbUSRecept")
                        .HasColumnType("int");

                    b.Property<int>("NbUSReceptCond")
                        .HasColumnType("int");

                    b.Property<int>("NbUSServi")
                        .HasColumnType("int");

                    b.Property<string>("NumPickList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Observation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PrintedServi")
                        .HasColumnType("int");

                    b.Property<string>("SetEmp")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.Property<string>("TypePickList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdPickList");

                    b.HasIndex("LigneProductionId");

                    b.HasIndex("StatusId");

                    b.ToTable("PickList");
                });

            modelBuilder.Entity("GMC.Core.Produit", b =>
                {
                    b.Property<int>("IdProduit")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdProduit"));

                    b.Property<int>("CodeProduit")
                        .HasColumnType("int");

                    b.Property<string>("CreerPar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime2");

                    b.Property<string>("Designation")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Etat")
                        .HasColumnType("int");

                    b.Property<int>("Seuil")
                        .HasColumnType("int");

                    b.HasKey("IdProduit");

                    b.ToTable("Produit");
                });

            modelBuilder.Entity("GMC.Core.RemoteUS", b =>
                {
                    b.Property<int>("IdRemoteUS")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdRemoteUS"));

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime2");

                    b.Property<int>("EtatConfirm")
                        .HasColumnType("int");

                    b.Property<int>("EtatCreate")
                        .HasColumnType("int");

                    b.Property<string>("MAPA")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NumPickList")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OT")
                        .HasColumnType("int");

                    b.Property<int>("ProduitCode")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdRemoteUS");

                    b.ToTable("RemoteUS");
                });

            modelBuilder.Entity("GMC.Core.Status", b =>
                {
                    b.Property<int>("IdStatus")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdStatus"));

                    b.Property<string>("Code")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdStatus");

                    b.ToTable("Status");
                });

            modelBuilder.Entity("GMC.Core.USPickList", b =>
                {
                    b.Property<string>("NumUS")
                        .HasColumnType("nvarchar(450)");

                    b.Property<string>("CodeProduit")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CreationPar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("DateCreation")
                        .HasColumnType("datetime2");

                    b.Property<DateTime?>("DateMaj")
                        .HasColumnType("datetime2");

                    b.Property<string>("MajPar")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PickListId")
                        .HasColumnType("int");

                    b.Property<int>("Quantite")
                        .HasColumnType("int");

                    b.Property<string>("Source")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("StatusId")
                        .HasColumnType("int");

                    b.HasKey("NumUS");

                    b.HasIndex("NumUS")
                        .IsUnique();

                    b.HasIndex("PickListId");

                    b.HasIndex("StatusId");

                    b.ToTable("USPickList");
                });

            modelBuilder.Entity("GMC.Core.User", b =>
                {
                    b.Property<int>("IdUser")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("IdUser"));

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Role")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Token")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("IdUser");

                    b.ToTable("User");
                });

            modelBuilder.Entity("RemoteUSUSPickList", b =>
                {
                    b.Property<int>("RemoteUSsIdRemoteUS")
                        .HasColumnType("int");

                    b.Property<string>("USPickListsNumUS")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("RemoteUSsIdRemoteUS", "USPickListsNumUS");

                    b.HasIndex("USPickListsNumUS");

                    b.ToTable("RemoteUSUSPickList", (string)null);
                });

            modelBuilder.Entity("GMC.Core.DetailPickList", b =>
                {
                    b.HasOne("GMC.Core.PickList", "PickList")
                        .WithMany("DetailPickLists")
                        .HasForeignKey("PickListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMC.Core.Produit", "Produit")
                        .WithMany("DetailPickLists")
                        .HasForeignKey("ProduitId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMC.Core.Status", "Status")
                        .WithMany("DetailPickLists")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PickList");

                    b.Navigation("Produit");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GMC.Core.InformationUS", b =>
                {
                    b.HasOne("GMC.Core.USPickList", "USPickList")
                        .WithOne("InformationUS")
                        .HasForeignKey("GMC.Core.InformationUS", "NumUs")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("USPickList");
                });

            modelBuilder.Entity("GMC.Core.PickList", b =>
                {
                    b.HasOne("GMC.Core.LigneProduction", "LigneProduction")
                        .WithMany("PickLists")
                        .HasForeignKey("LigneProductionId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMC.Core.Status", "Status")
                        .WithMany("PickLists")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("LigneProduction");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("GMC.Core.USPickList", b =>
                {
                    b.HasOne("GMC.Core.PickList", "PickList")
                        .WithMany("USPickLists")
                        .HasForeignKey("PickListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMC.Core.Status", "Status")
                        .WithMany("USPickLists")
                        .HasForeignKey("StatusId")
                        .OnDelete(DeleteBehavior.Restrict)
                        .IsRequired();

                    b.Navigation("PickList");

                    b.Navigation("Status");
                });

            modelBuilder.Entity("RemoteUSUSPickList", b =>
                {
                    b.HasOne("GMC.Core.RemoteUS", null)
                        .WithMany()
                        .HasForeignKey("RemoteUSsIdRemoteUS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GMC.Core.USPickList", null)
                        .WithMany()
                        .HasForeignKey("USPickListsNumUS")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("GMC.Core.LigneProduction", b =>
                {
                    b.Navigation("PickLists");
                });

            modelBuilder.Entity("GMC.Core.PickList", b =>
                {
                    b.Navigation("DetailPickLists");

                    b.Navigation("USPickLists");
                });

            modelBuilder.Entity("GMC.Core.Produit", b =>
                {
                    b.Navigation("DetailPickLists");
                });

            modelBuilder.Entity("GMC.Core.Status", b =>
                {
                    b.Navigation("DetailPickLists");

                    b.Navigation("PickLists");

                    b.Navigation("USPickLists");
                });

            modelBuilder.Entity("GMC.Core.USPickList", b =>
                {
                    b.Navigation("InformationUS")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
